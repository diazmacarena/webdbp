<!DOCTYPE html>
<style>
   .perfil-sintomas {
    background-color: #fdfdfd;
    border: 1px solid #e0e0e0;
    border-left: 5px solid #0891b2; /* Azul cian */
    border-radius: 8px;
    padding: 20px;
    margin-top: 20px;
    box-shadow: var(--shadow-soft);
  }
  
  .perfil-sintomas h3 {
    font-size: 1.4rem;
    color: #0891b2; /* Azul cian */
    margin-bottom: 10px;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
  
  .perfil-sintomas ul {
    list-style: none;
    padding-left: 0;
    margin: 0;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 10px;
  }
  
  .perfil-sintomas li {
    background-color: #f5f5f5;
    color: #333;
    padding: 10px 15px;
    border-radius: 20px;
    border: 1px solid #ddd;
    font-size: 0.95rem;
    font-weight: 500;
    box-shadow: 0 1px 3px rgba(0,0,0,0.05);
    transition: background-color 0.3s ease;
  }
  
  .perfil-sintomas li::before {
    content: "‚úÖ ";
    color: #28a745;
  }
  
  .perfil-sintomas li:hover {
    background-color: #eaeaea;
  }
.profile-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 30px;
}
.perfil-descripciones {
  background-color: #e6f7ff; /* Azul cian muy claro */
  border-left: 5px solid #0891b2; /* Azul cian */
  border: 1px solid #91d5ff; /* Azul cian claro */
  border-radius: 10px;
  padding: 25px;
  margin-top: 25px;
  box-shadow: 0 4px 8px rgba(8, 145, 178, 0.1); /* Sombra azul cian */
  width: 100%;
  max-width: 800px;
}

.perfil-descripciones h3 {
  color: #0e7490; /* Azul cian oscuro */
  font-size: 1.3rem;
  margin-bottom: 15px;
  text-align: center;
  text-transform: uppercase;
  letter-spacing: 1px;
}

.perfil-descripciones ul {
  list-style: none;
  padding-left: 0;
  margin: 0;
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.perfil-descripciones li {
  background-color: #ffffff;
  border: 1px solid #b3e5fc; /* Azul cian muy claro */
  border-radius: 12px;
  padding: 15px 20px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.05);
  transition: background-color 0.3s ease;
}

.perfil-descripciones li:hover {
  background-color: #f0fdff; /* Azul cian ultra claro */
}

.perfil-descripciones .sintoma-titulo {
  font-weight: bold;
  color: #0891b2; /* Azul cian */
  font-size: 1.05rem;
}

.perfil-descripciones .sintoma-descripcion {
  margin-top: 8px;
  font-size: 0.95rem;
  color: #0e7490; /* Azul cian oscuro */
  line-height: 1.5;
}

.perfil-descripciones .sintoma-link {
  margin-top: 10px;
  display: inline-block;
  font-size: 0.9rem;
  color: #0891b2; /* Azul cian */
  text-decoration: none;
}

.perfil-descripciones .sintoma-link:hover {
  text-decoration: underline;
}

.button-container {
    text-align: center;
    margin-top: 2rem;
    width: 100%;
  }

  .home-button {
    background-color: #6c757d;
    color: white;
    border: none;
    padding: 0.8rem 1.8rem;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: bold;
    cursor: pointer;
    text-decoration: none;
    display: inline-block;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease;
  }

  .home-button:hover {
    background-color: #5a6268;
  }


</style>
<html lang="es-PE">
<head>
  <!-- Incluye los metadatos comunes del head -->
  <%- include('partials/head') %>
  <!-- Incluye estilos espec√≠ficos para formularios -->
  <link rel="stylesheet" href="/styles/forms.css">
</head>
<body>
  <!-- Incluye el encabezado y navegaci√≥n com√∫n -->
  <%- include('partials/header') %>
  
<!-- Contenedor principal para la informaci√≥n del perfil -->
<div class="profile-content">
  
  <!-- Secci√≥n para el avatar del usuario -->
  <div class="profile-avatar">
    <div class="avatar-circle"><%= nombre.charAt(0).toUpperCase() %></div>
  </div>
  
  <!-- Agrupa info y s√≠ntomas en vertical -->
  <div class="profile-details">
    <!-- Informaci√≥n del usuario -->
    <div class="profile-info">
      <p><span>Nombre:</span> <%= nombre %></p>
      <p><span>Correo:</span> <%= correo %></p>
      <p><span>Fecha de nacimiento:</span> <%= fechaNacimiento || 'No registrada' %></p>
      <p><span>Puntaje:</span> <%= puntaje %></p>
      <p><span>Nivel de estr√©s:</span> <%= resultadoQuiz %></p>
      <p><span>Consejo:</span> <%= consejo %></p>
    </div>

   <% if (sintomas && sintomas.length > 0) { %>
     <div class="perfil-sintomas">
       <h3>S√≠ntomas detectados</h3>
       <ul>
         <% sintomas.forEach(([nombre, valor]) => { %>
           <li><%= nombre.replace(/_/g, ' ') %>: <strong><%= valor %></strong></li>
         <% }) %>
       </ul>
     </div>
   <% } else { %>
     <div class="perfil-sintomas">
       <h3>S√≠ntomas detectados</h3>
       <p>No se encontraron s√≠ntomas registrados.</p>
     </div>
   <% } %>
  </div>

  <% if (sintomasDBpedia && sintomasDBpedia.length > 0) { %>
  <div class="perfil-descripciones">
    <h3>Informaci√≥n de los s√≠ntomas desde DBpedia</h3>
    <ul id="lista-sintomas">
      <% sintomasDBpedia.forEach(({ sintoma, link }) => { %>
        <li data-link="<%= link %>" data-sintoma="<%= sintoma %>">
          <div class="sintoma-titulo"><%= sintoma.replace(/_/g, ' ') %></div>
          <div class="sintoma-descripcion">Cargando descripci√≥n...</div>
          <a class="sintoma-link" href="<%= link %>" target="_blank">Ver m√°s en DBpedia</a>
        </li>
      <% }); %>
    </ul>
  </div>
<% } %>


 <div class="button-container">
      <a href="/" class="home-button">üè† Volver al Inicio</a>
    </div>

</div>

<script>
  async function translateText(text, from = 'en', to = 'es') {
    try {
      const res = await fetch('https://libretranslate.de/translate', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ q: text, source: from, target: to, format: 'text' })
      });
      const data = await res.json();
      return data.translatedText + ' (Traducido autom√°ticamente)';
    } catch (err) {
      console.error('Error al traducir:', err);
      return text;
    }
  }

  async function fetchDescripcionDBpedia(uri) {
    const endpoint = 'https://dbpedia.org/sparql';

    const buildQuery = (lang) => `
      SELECT ?comment WHERE {
        <${uri}> rdfs:comment ?comment .
        FILTER (lang(?comment) = '${lang}')
      } LIMIT 1
    `;

    const fetchComment = async (lang) => {
      const url = `${endpoint}?query=${encodeURIComponent(buildQuery(lang))}&format=json`;
      try {
        const response = await fetch(url, {
          headers: {
            'Accept': 'application/sparql-results+json'
          }
        });
        const data = await response.json();
        if (data.results.bindings.length > 0) {
          return data.results.bindings[0].comment.value;
        }
      } catch (error) {
        console.error(`Error consultando DBpedia (${lang}):`, error);
      }
      return null;
    };

    const comentarioEs = await fetchComment('es');
    if (comentarioEs) return comentarioEs;

    const comentarioEn = await fetchComment('en');
    if (comentarioEn) {
      return await translateText(comentarioEn, 'en', 'es');
    }

    return null;
  }

  document.addEventListener('DOMContentLoaded', async () => {
    const lista = document.querySelectorAll('#lista-sintomas li');

    for (const item of lista) {
      const link = item.dataset.link;
      const sintoma = item.dataset.sintoma;
      const descripcionDiv = item.querySelector('.sintoma-descripcion');

      try {
        const descripcion = await fetchDescripcionDBpedia(link);

        if (descripcion) {
          descripcionDiv.textContent = descripcion;
        } else {
          descripcionDiv.textContent = 'No disponible en espa√±ol.';
        }
      } catch (err) {
        console.error(`Error cargando descripci√≥n para ${sintoma}:`, err.message);
        descripcionDiv.textContent = 'Error al cargar la descripci√≥n.';
      }
    }
  });
</script>
</body>
</html>
